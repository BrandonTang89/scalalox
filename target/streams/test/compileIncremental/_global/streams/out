[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 4 products, 4 sources, 5 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/ExprTest.scala, ${BASE}/src/test/scala/InterpreterTest.scala, ${BASE}/src/test/scala/ParserTest.scala, ${BASE}/src/test/scala/ScannerTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(lox.Grouping,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Expr,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Binary,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Unary$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Unary,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Grouping$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Literal,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Literal$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Binary$,ModifiedNames(changes = UsedName(toString,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Grouping has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Grouping: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Grouping.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Expr has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Expr: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Expr.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ParserTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of InterpreterTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Binary has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Binary: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Binary.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Unary$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Unary$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Unary$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Unary has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Unary: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Unary.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Grouping$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Grouping$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Grouping$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Literal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Literal: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Literal.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Literal$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Literal$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Literal$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0mThe lox.Binary$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) lox.Binary$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) lox.Binary$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ExprTest: [toString][0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(lox.Grouping,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Expr,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Binary,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Unary$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Unary,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Grouping$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Literal,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Literal$,ModifiedNames(changes = UsedName(toString,[Default]))), NamesChange(lox.Binary$,ModifiedNames(changes = UsedName(toString,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(ExprTest, ParserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(ExprTest, ParserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ExprTest, ParserTest[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to C:\Users\tangy\IdeaProjects\scalalox\target\scala-3.3.0\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-sbt-bridge\3.3.0\scala3-sbt-bridge-3.3.0.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 92b7b67 for Scala Compiler version 3.3.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.3.0\scala3-library_3-3.3.0.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.10\scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\tangy\IdeaProjects\scalalox\target\scala-3.3.0\test-classes;C:\Users\tangy\IdeaProjects\scalalox\target\scala-3.3.0\classes;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_3\3.2.16\scalactic_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_3\3.2.16\scalatest_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-core_3\3.2.16\scalatest-core_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-featurespec_3\3.2.16\scalatest-featurespec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-flatspec_3\3.2.16\scalatest-flatspec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-freespec_3\3.2.16\scalatest-freespec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funsuite_3\3.2.16\scalatest-funsuite_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-funspec_3\3.2.16\scalatest-funspec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-propspec_3\3.2.16\scalatest-propspec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-refspec_3\3.2.16\scalatest-refspec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-wordspec_3\3.2.16\scalatest-wordspec_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-diagrams_3\3.2.16\scalatest-diagrams_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-matchers-core_3\3.2.16\scalatest-matchers-core_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-shouldmatchers_3\3.2.16\scalatest-shouldmatchers_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-mustmatchers_3\3.2.16\scalatest-mustmatchers_3-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.2.16\scalatest-compatible-3.2.16.jar;C:\Users\tangy\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_3\2.1.0\scala-xml_3-2.1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.1437309 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ExprTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ExprTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ExprTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ExprTest,ModifiedNames(changes = UsedName(assertCompiles,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertTypeError,[Default]))) invalidates 1 classes due to The ExprTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(assertCompiles,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(assertTypeError,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(ExprTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ParserTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: ParserTest[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ParserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ParserTest,ModifiedNames(changes = UsedName(assertDoesNotCompile,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertTypeError,[Default]))) invalidates 1 classes due to The ParserTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(assertDoesNotCompile,[Default]), UsedName(assertCompiles,[Default]), UsedName(assertTypeError,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(ParserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
